# If you don't wish to use ETCD TLS verification these 2 secret can be ommited
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: kube-etcdbackup-etcd
  namespace: kube-system
data:
  tls.crt: <base64 ETCD client cert>
  tls.key: <base64 ETCD client key>
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: kube-etcdbackup-s3
  namespace: kube-system
data:
  S3_ACCESS_KEY: <base64 s3 access key>
  S3_SECRET_KEY: <base64 s3 secret key>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-etcdbackup
  namespace: kube-system
data:
  ETCDCTL_ENDPOINTS: 10.1.201.121:4000,10.1.201.122:4000,10.1.201.123:4000
  # ommit the following 3 variables if your not using ETCD TLS auth for ETCD
  ETCDCTL_CACERT: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  ETCDCTL_CERT: /ssl/tls.crt
  ETCDCTL_KEY: /ssl/tls.key
  S3_ALIAS: backup-minio
  S3_BUCKET: etcd-backup
  S3_ENDPOINT: http://backup.int.domain.com:9001/
  ## Place the backup under following prefix (folder)
  # S3_FOLDER: etcd-backup
  ## set AUTOCLEAN to 1 for cleaning up old etcd backups
  AUTOCLEAN: "1"
  ## you can adjust the number of hold backups
  # AUTOCLEAN_ARGS: --keep-n=200 --keep-hourly=40 --keep-daily=30
  ## Add PGP public key to enable encryption
  # GPG_PUBKEY: |
  #  -----BEGIN PGP PUBLIC KEY BLOCK-----
  #  -----END PGP PUBLIC KEY BLOCK-----
---